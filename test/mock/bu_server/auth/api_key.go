// Code generated by MockGen. DO NOT EDIT.
// Source: pkg/bu_server/auth/api_key.go

// Package mock_auth is a generated GoMock package.
package mock_auth

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	auth "github.com/openebl/openebl/pkg/bu_server/auth"
	storage "github.com/openebl/openebl/pkg/bu_server/storage"
)

// MockAPIKeyAuthenticator is a mock of APIKeyAuthenticator interface.
type MockAPIKeyAuthenticator struct {
	ctrl     *gomock.Controller
	recorder *MockAPIKeyAuthenticatorMockRecorder
}

// MockAPIKeyAuthenticatorMockRecorder is the mock recorder for MockAPIKeyAuthenticator.
type MockAPIKeyAuthenticatorMockRecorder struct {
	mock *MockAPIKeyAuthenticator
}

// NewMockAPIKeyAuthenticator creates a new mock instance.
func NewMockAPIKeyAuthenticator(ctrl *gomock.Controller) *MockAPIKeyAuthenticator {
	mock := &MockAPIKeyAuthenticator{ctrl: ctrl}
	mock.recorder = &MockAPIKeyAuthenticatorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAPIKeyAuthenticator) EXPECT() *MockAPIKeyAuthenticatorMockRecorder {
	return m.recorder
}

// Authenticate mocks base method.
func (m *MockAPIKeyAuthenticator) Authenticate(ctx context.Context, key auth.APIKeyString) (auth.APIKey, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Authenticate", ctx, key)
	ret0, _ := ret[0].(auth.APIKey)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Authenticate indicates an expected call of Authenticate.
func (mr *MockAPIKeyAuthenticatorMockRecorder) Authenticate(ctx, key interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Authenticate", reflect.TypeOf((*MockAPIKeyAuthenticator)(nil).Authenticate), ctx, key)
}

// CreateAPIKey mocks base method.
func (m *MockAPIKeyAuthenticator) CreateAPIKey(ctx context.Context, ts int64, request auth.CreateAPIKeyRequest) (auth.APIKey, auth.APIKeyString, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateAPIKey", ctx, ts, request)
	ret0, _ := ret[0].(auth.APIKey)
	ret1, _ := ret[1].(auth.APIKeyString)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// CreateAPIKey indicates an expected call of CreateAPIKey.
func (mr *MockAPIKeyAuthenticatorMockRecorder) CreateAPIKey(ctx, ts, request interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateAPIKey", reflect.TypeOf((*MockAPIKeyAuthenticator)(nil).CreateAPIKey), ctx, ts, request)
}

// ListAPIKeys mocks base method.
func (m *MockAPIKeyAuthenticator) ListAPIKeys(ctx context.Context, req auth.ListAPIKeysRequest) (auth.ListAPIKeysResult, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListAPIKeys", ctx, req)
	ret0, _ := ret[0].(auth.ListAPIKeysResult)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListAPIKeys indicates an expected call of ListAPIKeys.
func (mr *MockAPIKeyAuthenticatorMockRecorder) ListAPIKeys(ctx, req interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListAPIKeys", reflect.TypeOf((*MockAPIKeyAuthenticator)(nil).ListAPIKeys), ctx, req)
}

// RevokeAPIKey mocks base method.
func (m *MockAPIKeyAuthenticator) RevokeAPIKey(ctx context.Context, ts int64, request auth.RevokeAPIKeyRequest) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RevokeAPIKey", ctx, ts, request)
	ret0, _ := ret[0].(error)
	return ret0
}

// RevokeAPIKey indicates an expected call of RevokeAPIKey.
func (mr *MockAPIKeyAuthenticatorMockRecorder) RevokeAPIKey(ctx, ts, request interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RevokeAPIKey", reflect.TypeOf((*MockAPIKeyAuthenticator)(nil).RevokeAPIKey), ctx, ts, request)
}

// MockAPIKeyStorage is a mock of APIKeyStorage interface.
type MockAPIKeyStorage struct {
	ctrl     *gomock.Controller
	recorder *MockAPIKeyStorageMockRecorder
}

// MockAPIKeyStorageMockRecorder is the mock recorder for MockAPIKeyStorage.
type MockAPIKeyStorageMockRecorder struct {
	mock *MockAPIKeyStorage
}

// NewMockAPIKeyStorage creates a new mock instance.
func NewMockAPIKeyStorage(ctrl *gomock.Controller) *MockAPIKeyStorage {
	mock := &MockAPIKeyStorage{ctrl: ctrl}
	mock.recorder = &MockAPIKeyStorageMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAPIKeyStorage) EXPECT() *MockAPIKeyStorageMockRecorder {
	return m.recorder
}

// CreateTx mocks base method.
func (m *MockAPIKeyStorage) CreateTx(ctx context.Context, options ...storage.CreateTxOption) (storage.Tx, context.Context, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{ctx}
	for _, a := range options {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "CreateTx", varargs...)
	ret0, _ := ret[0].(storage.Tx)
	ret1, _ := ret[1].(context.Context)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// CreateTx indicates an expected call of CreateTx.
func (mr *MockAPIKeyStorageMockRecorder) CreateTx(ctx interface{}, options ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{ctx}, options...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateTx", reflect.TypeOf((*MockAPIKeyStorage)(nil).CreateTx), varargs...)
}

// GetAPIKey mocks base method.
func (m *MockAPIKeyStorage) GetAPIKey(ctx context.Context, tx storage.Tx, id string) (auth.ListAPIKeyRecord, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAPIKey", ctx, tx, id)
	ret0, _ := ret[0].(auth.ListAPIKeyRecord)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAPIKey indicates an expected call of GetAPIKey.
func (mr *MockAPIKeyStorageMockRecorder) GetAPIKey(ctx, tx, id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAPIKey", reflect.TypeOf((*MockAPIKeyStorage)(nil).GetAPIKey), ctx, tx, id)
}

// ListAPIKeys mocks base method.
func (m *MockAPIKeyStorage) ListAPIKeys(ctx context.Context, tx storage.Tx, req auth.ListAPIKeysRequest) (auth.ListAPIKeysResult, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListAPIKeys", ctx, tx, req)
	ret0, _ := ret[0].(auth.ListAPIKeysResult)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListAPIKeys indicates an expected call of ListAPIKeys.
func (mr *MockAPIKeyStorageMockRecorder) ListAPIKeys(ctx, tx, req interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListAPIKeys", reflect.TypeOf((*MockAPIKeyStorage)(nil).ListAPIKeys), ctx, tx, req)
}

// StoreAPIKey mocks base method.
func (m *MockAPIKeyStorage) StoreAPIKey(ctx context.Context, tx storage.Tx, key auth.APIKey) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "StoreAPIKey", ctx, tx, key)
	ret0, _ := ret[0].(error)
	return ret0
}

// StoreAPIKey indicates an expected call of StoreAPIKey.
func (mr *MockAPIKeyStorageMockRecorder) StoreAPIKey(ctx, tx, key interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "StoreAPIKey", reflect.TypeOf((*MockAPIKeyStorage)(nil).StoreAPIKey), ctx, tx, key)
}
